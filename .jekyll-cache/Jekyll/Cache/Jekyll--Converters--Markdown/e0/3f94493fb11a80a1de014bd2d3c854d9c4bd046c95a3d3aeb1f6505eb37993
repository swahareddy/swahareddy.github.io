I"œ<blockquote class="blockquote">
    <p class="mb-0"><i>Oh, it is on, like a prawn who yawns at dawn.</i></p>
    <p style="text-align:right;">- Andy Bernard</p>
    <center><img src="gifgenerator_images\prawnwhoridesatdawn.gif" /></center>
</blockquote>

<h2 id="prepare-the-sitcom">Prepare the sitcom</h2>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">PrepDB.ipynb</code></p>
  <h3 id="structure">Structure</h3>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TV Show Name
â”‚
â””â”€â”€â”€Season 1
â”‚   â”‚â”€â”€â”€Episode 1.mp4
â”‚   â”‚â”€â”€â”€Episode 2.mp4
â”‚   â”‚   ...
â”‚   â”‚â”€â”€â”€Episode 24.mp4
â”‚   â”‚â”€â”€â”€Episode 1.srt
â”‚   â”‚â”€â”€â”€Episode 2.srt
â”‚   â”‚   ...
â”‚   â”‚â”€â”€â”€Episode 24.srt
â”‚   
â””â”€â”€â”€Season 2
â”‚   â”‚   ...
â”‚   
â””â”€â”€â”€Season 3
...
</code></pre></div></div>

<p><img src="/projects/gifgenerator_images/folder_struct.gif" alt="folder structure" /></p>

<ol>
  <li>We donâ€™t really need any specific file nomenclature. Only that each seasonâ€™s folder has alphabetical video files and alphabetical subtitle files.</li>
  <li>Put all these season folders into one â€˜Sitcom Nameâ€™ folder</li>
</ol>

<p><img src="/projects/gifgenerator_images/haevyouprep.gif" alt="" /></p>

<p>Iâ€™ve use <code class="language-plaintext highlighter-rouge">.mp4</code> and <code class="language-plaintext highlighter-rouge">.srt</code> here, but they can be other formats too.</p>

<p>The first cell in <code class="language-plaintext highlighter-rouge">PrepDB.ipynb</code> simply reads the names of these files. The rest of this notebook reads individual subtitles, cleans them and then streams them into BigQuery line-by-line.</p>

<p>3 episodes in the GIF above were about 45,000 rows/subtitles.</p>

<p><img src="/projects/gifgenerator_images/bq_schema.jpg" alt="bq schema" /> BigQuery table schema</p>

<hr />

<h1 id="ask-for-the-gif">Ask for the GIF</h1>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">MakeGIF.ipynb</code></p>
  <ol>
    <li>Just set the variable name <code class="language-plaintext highlighter-rouge">selected_dialogue</code> as the word/dialog you want to search for.</li>
    <li>You will be asked which dialog you want to base your GIF on.
<img src="/projects/gifgenerator_images/dialog_options.jpg" alt="dialog options" /></li>
  </ol>
</blockquote>

<ol>
  <li>Based on your selection and its corresponding timestamps, a video is cut, the text is overlayed and the gif is saved.
<img src="/projects/gifgenerator_images/gif_gen.gif" alt="generated GIF" /></li>
</ol>

<iframe width="560" height="315" src="https://www.youtube.com/embed/btR2OAGXCCU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<h1 id="ask-for-it-on-your-mobile-">Ask for it on your mobile! ðŸ“²</h1>

<p>Check out <code class="language-plaintext highlighter-rouge">jeevz.py</code> where I made a chat bot to ask for GIFs!</p>

<p><img src="/projects/gifgenerator_images/jeevz_chat_bot.jpeg" alt="chat bot screenshot" /></p>

<p>I used <a href="https://www.youtube.com/watch?v=5nhdxpoicW4">this</a> and <a href="https://pypi.org/project/telegram-send/">this</a> to make the chatbot. You should probably write your own, mine breaks easily.</p>

<p><img src="/projects/gifgenerator_images/putmanuredown.gif" alt="manure" /></p>

<hr />

<h2 id="future-scope">Future Scope</h2>
<p>These are easy enough to offer:</p>
<ul>
  <li>You can make a GIF that includes subtitles adjacent to each other too</li>
  <li>Subtitles are sometimes a few seconds out of sync. Offer a simple +/- 3 seconds option for the video</li>
  <li>Edit the subtitle to a custom text?</li>
</ul>

<p>â€“&gt; Also, in BigQuery, implement a UDF for Levenshtein distance/ Cosine similarity so that the user need not remember it word for word</p>

<h3 id="making-this-accessible-for-all">Making this accessible for all</h3>
<p>Any cloud based solution will basically need episodes available online to be downloaded ino an execution env</p>
<ul>
  <li>Upload the seasons to GCS/ YouTube (Unlisted)</li>
  <li>Turn this into a Colab notebook (thus avoiding data cost/time in downloading the whole episode from where GIF is to be picked)</li>
  <li>Maybe even break each episode into small Â¬5MB chunks and upload so that user running notebook locally does not have large UL/DL cost.</li>
</ul>

:ET